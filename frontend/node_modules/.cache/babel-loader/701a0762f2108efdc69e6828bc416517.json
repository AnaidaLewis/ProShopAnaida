{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_portfolio/react-portfolio-website-1/backend/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from 'react';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    user,\n    loading\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = userUpdate;\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      navigate('/admin/userlist');\n    } else {\n      if (!user.name || user.id !== Number(id)) {\n        dispatch(getUserDetails(id));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [id, user, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      id: user.id,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          className: \"py-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          className: \"py-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          className: \"py-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"py-3\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditScreen, \"0+oeDXreSH+Qehhp6VpfzmqC1W4=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useNavigate];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["useEffect","useState","React","Link","useLocation","useNavigate","useParams","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","error","user","loading","userUpdate","errorUpdate","loadingUpdate","success","successUpdate","navigate","type","Number","submitHandler","e","preventDefault","target","value","checked"],"sources":["/Users/mac/Desktop/react_portfolio/react-portfolio-website-1/backend/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport React from 'react'\nimport {Link,useLocation, useNavigate, useParams} from 'react-router-dom'\nimport {Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport {getUserDetails, updateUser} from '../actions/userActions'\nimport {USER_UPDATE_RESET} from '../constants/userConstants'\n\nfunction UserEditScreen() {\n\n\n    const {id} = useParams()\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n    \n    const dispatch = useDispatch()\n    \n    const userDetails = useSelector(state => state.userDetails)\n    const {error, user, loading} = userDetails\n\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const {error : errorUpdate, loading : loadingUpdate, success : successUpdate} = userUpdate\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        if(successUpdate){\n            dispatch({type : USER_UPDATE_RESET})\n            navigate('/admin/userlist')\n        }\n        else{\n            if(!user.name || user.id !== Number(id)){\n                dispatch(getUserDetails(id))\n            }\n            else{\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    \n    }, [id, user, successUpdate])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({id : user.id, name, email, isAdmin}))\n\n    }\n\n\n\n  return (\n    <div>\n        <Link to = '/admin/userlist'>\n            Go Back\n        </Link>\n        \n        <FormContainer>\n            <h1>Edit User</h1>\n            {loadingUpdate && <Loader/>}\n            {errorUpdate && <Message variant = 'danger'>{errorUpdate}</Message>}\n            \n            {loading ? (<Loader />) \n                    : error ? (<Message variant = 'danger'>{error}</Message>)\n                            : (\n                                <Form onSubmit = {submitHandler}>\n\n                                <Form.Group controlId = 'name' className = 'py-3'>\n                                        <Form.Label>Name</Form.Label>\n                                        <Form.Control\n                                        type = 'name'\n                                        placeholder = 'Enter Name'\n                                        value = {name}\n                                        onChange = {(e) => setName(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                </Form.Group>\n                    \n                                <Form.Group controlId = 'email' className = 'py-3'>\n                                        <Form.Label>Email Address</Form.Label>\n                                        <Form.Control\n                                        type = 'email'\n                                        placeholder = 'Enter Email'\n                                        value = {email}\n                                        onChange = {(e) => setEmail(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                </Form.Group>\n                                \n                    \n                                <Form.Group controlId = 'isadmin' \n                                className = 'py-3'\n                                >\n                                    <Form.Check\n                                    \n                                    type = 'checkbox'\n                                    label = 'Is Admin'\n                                    checked = {isAdmin}\n                                    onChange = {(e) => setIsAdmin(e.target.checked)}\n                                    >\n                    \n                                    </Form.Check>\n                                </Form.Group>\n                    \n                    \n                                <Button\n                                        type = 'submit'\n                                        variant = 'primary'\n                                        className = 'py-3'\n                                    >\n                                        Update\n                                </Button>\n                                </Form>\n            )}\n            \n        </FormContainer>\n    </div>\n  )\n}\n\nexport default UserEditScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}